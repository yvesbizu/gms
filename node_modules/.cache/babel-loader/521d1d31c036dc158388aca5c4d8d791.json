{"ast":null,"code":"'use strict';\n\n/* eslint-env browser */\nvar Client = require('./core');\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nvar configure = function configure(fn) {\n  return function (options) {\n    return fn(new Client(options), options);\n  };\n};\nmodule.exports = configure;","map":null,"metadata":{},"sourceType":"script"}