{"ast":null,"code":"'use strict';\n\n/* eslint-env browser */\nvar CID = require('cids');\nvar _require = require('multiaddr'),\n  multiaddr = _require.multiaddr;\nvar multibase = require('multibase');\nvar multicodec = require('multicodec');\nvar multihash = require('multihashes');\nvar globSource = require('ipfs-utils/src/files/glob-source');\nvar urlSource = require('ipfs-utils/src/files/url-source');\n\n/**\n * @typedef {import('./types').EndpointConfig} EndpointConfig\n * @typedef {import('./types').Options} Options\n */\n\n/**\n * @param {Options} options\n */\nfunction create() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  /** @type {import('ipfs-core-types').IPFS & { getEndpointConfig: () => EndpointConfig }} */\n  var client = {\n    add: require('./add')(options),\n    addAll: require('./add-all')(options),\n    bitswap: require('./bitswap')(options),\n    block: require('./block')(options),\n    bootstrap: require('./bootstrap')(options),\n    cat: require('./cat')(options),\n    commands: require('./commands')(options),\n    config: require('./config')(options),\n    dag: require('./dag')(options),\n    dht: require('./dht')(options),\n    diag: require('./diag')(options),\n    dns: require('./dns')(options),\n    files: require('./files')(options),\n    get: require('./get')(options),\n    getEndpointConfig: require('./get-endpoint-config')(options),\n    id: require('./id')(options),\n    isOnline: require('./is-online')(options),\n    key: require('./key')(options),\n    log: require('./log')(options),\n    ls: require('./ls')(options),\n    mount: require('./mount')(options),\n    name: require('./name')(options),\n    object: require('./object')(options),\n    pin: require('./pin')(options),\n    ping: require('./ping')(options),\n    pubsub: require('./pubsub')(options),\n    refs: require('./refs')(options),\n    repo: require('./repo')(options),\n    resolve: require('./resolve')(options),\n    start: require('./start')(options),\n    stats: require('./stats')(options),\n    stop: require('./stop')(options),\n    swarm: require('./swarm')(options),\n    version: require('./version')(options)\n  };\n  return client;\n}\nmodule.exports = {\n  create: create,\n  CID: CID,\n  multiaddr: multiaddr,\n  multibase: multibase,\n  multicodec: multicodec,\n  multihash: multihash,\n  globSource: globSource,\n  urlSource: urlSource\n};","map":null,"metadata":{},"sourceType":"script"}